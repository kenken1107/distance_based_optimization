#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon May 10 13:08:17 2021

@author: shintanitaketo
"""
import pytest
import open_q_identifier_func as oqf

@pytest.mark.parametrize(
    "p1, result, result_final", [
        ("「複数の示唆を、論点で、一つに絞り出す」という感覚がまだ理解できません。この先の章で、解説がありますでしょうか？",list, "not_open"),
        ("これは、なんですか？ラーメンですか？",list, "not_open"),
        ("これはなんですか？", list, "open"),
        ("論点とは、なんでしょうか？ご教示いただけると幸いでございます。",list, "open"),
        ("二項対立での考えかたは実務でもとても使えるなとおもっております。 3つで迷った場合は同じ比較軸で比べて、二つで比べてよいと思った方と残りの一つを 比較するということで宜しいでしょうか。",list, "not_open"),
        ('有効なアウトプットの練習方法等はありますでしょうか?',list, "not_open"),
        ("講義ありがとうございます。 声に出してみると、全体でおよそ3分かかり、回答のシビアな規模感も感じることが出来ました。 実際に、どこを場合分けするか？は、その人の頭で、どこの「部分」を分けて考えなければより正確に推定できない、と考えているかがわかる内容だと思いました。人の場合分けの場合は、誰なのか、で商品の購入の仕方や値段が大きく変わる、つまりは、その場合わけに基づいて、企業としてはマーケティングや、展開する商品等が変わってくる、といったイメージを持ちました。 そう考えると、傾向の似た場合というのは、分けて考える必要があまりない、ということにもなります。 このような理解で、よろしいでしょうか？ よろしくお願いいたします。 追記) ようやくフェルミ推定とビジネスの繋がりを感じられるようなっています", 
         list, "not_open"),
        ("気持ち悪い部分は感じるものの、どう分解して良いか分からない事があるのですが、単なる練習不足でしょうか？何か考えるコツ等があれば教えて下さい。？", list, "not_open"),
        ("ヨコの掛け算に加えて、タテの足し算を考える事でよりフェルミ推定のレベルが高まることは理解したのですが、タテの分解がなかなかパッと思いつかないです。練習しかないのでしょうか？あるいは良く使う切り口等があるのでしょうか？", 
         list, "not_open"),
        ("ある駅の周辺を商圏規模として前提を置く際、「1日の利用者数が10万人の駅を想定しました」と前提を置き説明する事は問題無いでしょうか？", list, "not_open"),
        ("切り口、数字の置き方含めて何か良い方法はありますでしょうか？", list, "not_open"),
        ("頑張って暗記します。ある程度マスターと言える合格レベルの基準はありますでしょうか？", list, "not_open"),
        ("即消費の商品でない場合は使用回数等より実態に近い分析が可能になる需要サイドからの立式が良いこと理解しました。一方で需要でも供給でもどちらでも良いと言ったパターンもあるのでしょうか？", 
         list, "not_open"),
        ("というハプニングが起きたら冷や汗ですが、 敢えて真ん中にくるように検算をしてみせる、でも良いですか？ イメージでいうと、銭湯の推定で30万円とかが最終的に出た場合、教材と同じ設定のコインロッカーの回転率は、めっちゃ混んでで1時間に1人利用(8回転)までで40万まであり得る、と言ってみせる、ということです。 あるいは、そこは素直に、ちょっと大きめに出ていますね、、とした方が良いのでしょうか？？",
         list, "not_open"),
        ("というか、”バカ”の始まり 因数分解の各要素は、出来る限り売上を上げるための打ち手に繋がるドライバー、つまりクライアント側でコントロール出来る要素になっていなきゃいけない、という理解であっておりますでしょうか？(商圏人口とかもあったりするので全ての要素は難しいと思いますが) 基本的には供給サイドだし、ビジネスモデルが反映されている必要がある、というのはそういうことなのかなと。",
         list, "not_open"),
        ("ステップ４は、示唆を2つ以上検討し、そのうちどれをお客様に伝えるかを決めるための論点を設定し、それを解いてメッセージ絞り込むというプロセスを踏むことで、より頭を使うことになり、よってもって価値を創出できると理解しましたが、正しいでしょうか。 「考えるエンジン講座」のフェルミ推定の回で、因数分解は常に2つ以上考えて、後々の展開を視野に入れてどれが良いかを検討するところが頭の使っているところである、とあり、今回の話に近いと感じました",
         list, "not_open"),
        ("ありがとうございました。 SDにおいて自由を利かせるというのは、PJよりも一層狭く深くを見せることであり、その深さをつくるのがまさにリアリティスイッチであるかと思ったのですが、理解あっておりますでしょうか。", 
         list, "not_open"),
        ("当該スキルの獲得には、お客さんの発言を聞いてその背景を想像したり、競合企業の動き見てその背景を想像したりと、日々の仕事の中でリアリティスイッチがオンになっているかを常に意識し続け、経験を積み重ねながら自身の想像力を地道に高めていくしかないかと考えたのですが、いかがでしょうか。",
         list, "not_open"),
        ("・示唆ロード2は、クライアントの興味をくみつつ、自分のリードしたい方向に持ってくときに使いますか？ ・実際は、言いたいことに合うファクトを探すもしくは、こじつけて説明するイメージですか？",
         list, "not_open"),
        ("•クライアントには、「ファクトですが」、「示唆ですが」と言って使いわけた方がいいですよね？ ・見極める論点も複数あると思いますが、その中で1番重要な論点(何が決まればきまるのか)は、クライアントの考え方次第や、判断への影響度、田の字などで見極めになりますか？",
         list, "not_open"),
        ("切り口、数字の置き方含めて何か良い方法はありますでしょうか？", list, "not_open"),
        ("以前まさにコンビニの1日の売上を求めると言った問題で、その店舗の周辺商圏規模から求めた結果、コンビニに立ち寄る人は周辺に住む人以外もいるしその切り口では説得力、網羅性に欠ける言われた事があります。どうしたらそう言った指摘に適切な回答を返せるのでしょうか？", 
         list, "open"),
        ("というか、”バカ”の始まり 因数分解の各要素は、出来る限り売上を上げるための打ち手に繋がるドライバー、つまりクライアント側でコントロール出来る要素になっていなきゃいけない、という理解であっておりますでしょうか？(商圏人口とかもあったりするので全ての要素は難しいと思いますが) 基本的には供給サイドだし、ビジネスモデルが反映されている必要がある、というのはそういうことなのかなと。",
         list, "not_open"),
        ("スターバックスの一日の売り上げで、イートインのみならずテイクアウトを考慮するとレジ数×一時間当たりに捌ける数×単価ということでしたが、これはイートイン・テイクアウトが想定される業態〈例えばマクドナルド〉であれば同様の考え方でよろしいでしょうか？",
         list, "not_open"),
        ("■質問 〇〇じゃなくて〇〇、は 相手があえてそう言っている理由を考える上での取っ掛かりを得るための口癖という理解で良いでしょうか？",
         list, "not_open"),
        ("■質問 「あーだったら、こう。こうだったら、あー」というのは、データ分析を目的とする場合は、 「こういうデータがあれば、こんな分析ができそう」という理解でよろしいでしょうか。 ■問題解答 1　旧機種の購入者属性情報 2　新機種の購入者属性情報 3 機種別売上推移データ 4 組織体制、製品開発体制 5 旧機種の製品データ詳細 6 新機種の製品データ詳細 7 これまでの販売戦略資料 8 競合情報 9 全製品の説明資料（カタログなど） 10 製品開発PJに関する各種資料",
         list, "not_open"),
        ("この講座の中では珍しくSM以上向けの内容だったかと思いますが、ここで入れた狙いは何でしょうか。(後で出てくるものと思いますが） また、MDがMをしっかり詰められていないのはどういう原因で起こるのでしょうか。",
         list, "open"),
        ("以下理解で合っていますでしょうか？ ・満席になるのであれば、100%稼働してるんだから稼働率は考えずに回転数のみ考える ・満席にならないのであれば、回転しないのだから回転率は考えずに稼働率のみ考える ・満席になる時間帯とならない時間帯があれば、上記２通りの計算方法を併用する",
         list, "not_open"),
        ("ただこれまではこの面接突破だけを目的とした教え方はある種邪道と捉えていた側面もあったとの事ですが、この考え方が変わったのはどうしてでしょうか？", list,
         "open")
        
        ]
    )

class TestAll(object):
    def test_splitter_type(self, p1, result, result_final):
        assert type(oqf.question_sentence_splitter(p1)) is result
    
    def test_splitter_lengths(self, p1, result, result_final):
        assert len(oqf.question_sentence_splitter(p1)) >= 1
    
    def test_extractor__type(self, p1, result, result_final):
        sentences = oqf.question_sentence_splitter(p1)
        questions = oqf.question_extractor(sentences)
        assert (type(questions) is list) or (type(questions) is None)
    
    def test_result(self, p1, result, result_final):
        sentences = oqf.question_sentence_splitter(p1)
        questions = oqf.question_extractor(sentences)
        q_type    = oqf.open_question_identifier(questions)
        assert q_type == result_final
